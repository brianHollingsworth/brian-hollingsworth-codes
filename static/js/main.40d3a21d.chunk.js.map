{"version":3,"sources":["BHLogo.jsx","Profile.jsx","Job.jsx","WorkExperience.jsx","Skillset.jsx","ResumeSection.jsx","ResumeRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["BHLogo","className","stroke","width","height","viewBox","id","stroke-width","fill","fill-rule","stroke-linecap","d","defaultProps","undefined","Profile","props","href","target","rel","Job","title","company","tenure","WorkExperience","Skillset","ResumeSection","to","route","exact","style","color","textDecoration","activeStyle","borderLeft","paddingLeft","icon","routes","path","sidebar","main","ResumeRouter","display","backgroundColor","listStyleType","padding","faUserCircle","faBriefcase","faCode","faTwitter","faGithub","flex","map","index","key","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40d3a21d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction BHLogo({ className, stroke, width, height }) {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 700 700\" className={className}>\n        <title>Signature</title>\n        <desc>A signature I created while working at Merrill.</desc>\n        <g id=\"Signature\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n            <path d=\"M211,227 C179.802278,282.921775 152.07339,326.186033 127.813335,356.792772 C103.55328,387.399511 66.2177324,426.221226 15.8066918,473.257919\" id=\"path-1\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M15.8066918,473.257919 C106.281582,397.607312 175.249222,344.023267 222.709613,312.505784 C270.170005,280.988302 337.1087,244.319707 423.525698,202.5\" id=\"path-2\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M423.525698,202.5 C442.984125,225.084586 422.300349,256.09479 361.474369,295.530613 C300.648389,334.966435 219.77107,365.484643 118.842411,387.085235\" id=\"path-3\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M118.842411,388.561225 C200.07994,386.593239 256.845487,386.593239 289.139053,388.561225 C315.19869,390.149313 360.786124,391.267592 394.451608,406.565923 C396.900631,407.678812 400.915589,411.278836 402.313677,413.984277 C403.424944,416.134691 403.647752,419.928606 402.982103,425.366023\" id=\"path-4\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M402.982103,425.366023 C397.076589,433.484211 388.351301,441.39232 376.806239,449.09035 C355.417373,463.352043 341.94589,472.209281 319.722473,480.911437 C287.112539,493.680704 246.546473,503.420268 223.90584,507.268043 C193.6057,512.417551 140.585986,516.432652 96.780435,507.268043 C77.2512419,503.182319 50.2599941,491.84561 15.8066918,473.257919\" id=\"path-5\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M15.8066918,473.257919 L683.5,290.5\" id=\"path-6\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M529.5,192.868017 L338.5,555.5\" id=\"path-7\" stroke={stroke} stroke-width=\"23\"></path>\n            <path d=\"M657.5,192.868017 L466.5,555.5\" id=\"path-8\" stroke={stroke} stroke-width=\"23\"></path>\n        </g>\n    </svg>\n  );\n}\n\nBHLogo.propTypes = {\n  className: PropTypes.string,\n  stroke: PropTypes.string,\n};\n\nBHLogo.defaultProps = {\n  className: undefined,\n  stroke: '#61dafb'\n};\n\nexport default BHLogo;\n","import React from 'react';\n\nexport default function Profile(props) {\n    return (\n        <div>\n            <h2>Profile</h2>\n            <p>If it wasn't apparent by the URL, I'm Brian Hollingsworth. I made\n                brian.hollingsworth.codes for a multitude of reasons: I wanted an always-changing\n                side project for experimenting with new web frameworks; updating a paper resume felt\n                antiquated, and LinkedIn became tiresome. Nothing makes me feel more homogeneous\n                than flaunting my profile on the same platform as every other developer out there.\n                <br/>I am still in the process of fully migrating from my previous <a\n                className=\"App-link\"\n                href=\"https://github.com/brianHollingsworth/brian.hollingsworth.codes\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">Node.js resume</a>, so feel free to pull from that repository \n                in the meantime.</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport './css/Job.css';\n\nconst Job = props => {\n    return (\n        <div className=\"job\">\n            <div className=\"job-header\">\n                <h4 className=\"job-title\">{props.title}</h4>\n                <h5 className=\"job-company\">{props.company}</h5>\n                <h5 className=\"job-tenure\">{props.tenure}</h5>\n            </div>\n            <p>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequuntur odit, dolores unde atque recusandae expedita dignissimos eum tempora veniam perspiciatis.\n            </p>\n            <hr></hr>\n        </div>\n    );\n};\n\nexport default Job;","import React from 'react';\nimport Job from './Job';\n\nexport default function WorkExperience(props) {\n    return (\n        <div id=\"work-experience\">\n            <h2>Work Experience</h2>\n            {/* TODO: Implement a read-from-JSON feature, similar to the\n            original brian.hollingsworth.codes read displayed information. */}\n            <Job title=\"Software Engineer\" company=\"Optum\" tenure=\"October 2018 - Present\"/>\n            <Job title=\"Associate Software Engineer\" company=\"Optum\" tenure=\"August 2018 - October 2018\"/>\n            <Job title=\"Applications Developer II\" company=\"Optum\" tenure=\"January 2018 - August 2018\"/>\n            <Job title=\"Tech Dev Program Senior Associate\" company=\"Optum\" tenure=\"November 2016 - January 2018\"/>\n            <Job title=\"Tech Dev Program Intern\" company=\"Optum\" tenure=\"June 2016 - August 2016\"/>\n            <Job title=\"Software Engineering Intern\" company=\"Maverick Software Consulting\" tenure=\"March 2014 – April 2016\"/>\n            <Job title=\"Software Quality Assurance Intern\" company=\"Symantec\" tenure=\"May 2015 – August 2015\"/>\n            <Job title=\"Manager\" company=\"Marnanteli's Pizza\" tenure=\"January 2012 – February 2016\"/>\n            <Job title=\"Fulfillment Associate\" company=\"Merrill Corporation\" tenure=\"July 2012 – February 2014\"/>\n            <div className=\"spacer\"></div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function Skillset(props) {\n    return (\n        <div>\n            <h2>Skillset</h2>\n            <p>Duis aute irure dolor in reprehenderit in voluptate velit esse\n                cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                cupidatat non proident, sunt in culpa qui officia deserunt\n                mollit anim id est laborum.</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function ResumeSection(props) {\n    return (\n        <li>\n            <NavLink to={props.route} exact style={{color: '#6e7179', textDecoration: 'none'}} activeStyle={{color: 'white', textDecoration: 'none', borderLeft: 'solid white 0.15em', paddingLeft: '0.85em'}}><FontAwesomeIcon icon={props.icon} /></NavLink>\n        </li>\n    );\n}","import React from \"react\";\nimport BHLogo from './BHLogo';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport WorkExperience from \"./WorkExperience\";\nimport Skillset from \"./Skillset\";\nimport ResumeSection from './ResumeSection';\n\nimport { faTwitter, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUserCircle, faBriefcase, faCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>Profile</div>,\n    main: () => <Profile/>\n  },\n  {\n    path: \"/work-experience\",\n    sidebar: () => <div>Work Experience</div>,\n    main: () => <WorkExperience/>\n  },\n  {\n    path: \"/skillset\",\n    sidebar: () => <div>Skillset</div>,\n    main: () => <Skillset/>\n  }\n];\n\nexport default function ResumeRouter(props) {\n  return (\n    <Router>\n      <div style={{ display: \"flex\", width: \"100%\" }}>\n        <div id=\"router-sidebar\" style={{ width: \"3.1em\", backgroundColor: \"#282C34\" }}>\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            <li id=\"logo-li\">\n              <BHLogo className=\"App-logo\" />\n            </li>\n              <ResumeSection route=\"/\" icon={faUserCircle}/>\n              <ResumeSection route=\"/work-experience\" icon={faBriefcase}/>\n              <ResumeSection route=\"/skillset\" icon={faCode}/>\n            <li>\n              <a id=\"twitter\" href=\"https://twitter.com/Kobe_Brian\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} /></a>\n            </li>\n            <li>\n              <a id=\"github\" href=\"https://github.com/brianHollingsworth\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\n            </li>\n          </ul>\n        </div>\n\n        <div id=\"router-switch\" style={{ flex: 1, padding: \"10px\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              // Render more <Route>s with the same paths as\n              // above, but different components this time.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ResumeRouter from './ResumeRouter';\nimport './App.css';\nimport './index.css';\nimport './signature-animate.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ResumeRouter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}