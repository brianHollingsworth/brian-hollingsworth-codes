{"version":3,"sources":["BHLogo.jsx","Profile.jsx","Job.jsx","JobList.jsx","WorkExperience.jsx","SkillProficiency.jsx","SkillGrid.jsx","Skillset.jsx","ResumeSection.jsx","ResumeRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["BHLogo","className","stroke","width","height","viewBox","id","strokeWidth","fill","fillRule","strokeLinecap","d","defaultProps","undefined","Profile","props","href","target","rel","Job","title","company","tenure","ReactHtmlParser","description","JobList","JobsData","map","jobDetail","key","Title","Company","Tenure","Description","Component","WorkExperience","SkillProficiency","stars","i","proficiency","push","icon","faStar","size","SkillGrid","Languages","language","alt","Name","src","Icon","class","Proficiency","Tools","tool","Environments","environment","Skillset","ResumeSection","to","route","exact","style","color","textDecoration","activeStyle","borderLeft","paddingLeft","routes","path","sidebar","main","ResumeRouter","display","backgroundColor","listStyleType","padding","faUserCircle","faBriefcase","faCode","faTwitter","faGithub","flex","paddingRight","index","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2be8b2ab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction BHLogo({ className, stroke, width, height }) {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 700 700\" className={className}>\n        <title>Signature</title>\n        <desc>A signature I created while working at Merrill.</desc>\n        <g id=\"Signature\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\">\n            <path d=\"M211,227 C179.802278,282.921775 152.07339,326.186033 127.813335,356.792772 C103.55328,387.399511 66.2177324,426.221226 15.8066918,473.257919\" id=\"path-1\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M15.8066918,473.257919 C106.281582,397.607312 175.249222,344.023267 222.709613,312.505784 C270.170005,280.988302 337.1087,244.319707 423.525698,202.5\" id=\"path-2\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M423.525698,202.5 C442.984125,225.084586 422.300349,256.09479 361.474369,295.530613 C300.648389,334.966435 219.77107,365.484643 118.842411,387.085235\" id=\"path-3\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M118.842411,388.561225 C200.07994,386.593239 256.845487,386.593239 289.139053,388.561225 C315.19869,390.149313 360.786124,391.267592 394.451608,406.565923 C396.900631,407.678812 400.915589,411.278836 402.313677,413.984277 C403.424944,416.134691 403.647752,419.928606 402.982103,425.366023\" id=\"path-4\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M402.982103,425.366023 C397.076589,433.484211 388.351301,441.39232 376.806239,449.09035 C355.417373,463.352043 341.94589,472.209281 319.722473,480.911437 C287.112539,493.680704 246.546473,503.420268 223.90584,507.268043 C193.6057,512.417551 140.585986,516.432652 96.780435,507.268043 C77.2512419,503.182319 50.2599941,491.84561 15.8066918,473.257919\" id=\"path-5\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M15.8066918,473.257919 L683.5,290.5\" id=\"path-6\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M529.5,192.868017 L338.5,555.5\" id=\"path-7\" stroke={stroke} strokeWidth=\"23\"></path>\n            <path d=\"M657.5,192.868017 L466.5,555.5\" id=\"path-8\" stroke={stroke} strokeWidth=\"23\"></path>\n        </g>\n    </svg>\n  );\n}\n\nBHLogo.propTypes = {\n  className: PropTypes.string,\n  stroke: PropTypes.string,\n};\n\nBHLogo.defaultProps = {\n  className: undefined,\n  stroke: '#61dafb'\n};\n\nexport default BHLogo;\n","import React from 'react';\nimport './css/Profile.css';\n\nexport default function Profile(props) {\n    return (\n        <div id=\"profile\">\n            <h1>Brian J. Hollingsworth</h1>\n            <span id=\"profile-span\">\n            <p id=\"foreward\">I am a software engineer, and this is my ever-changing alternative to LinkedIn and\n                paper resume. Originally developed as a <a\n                id=\"original-repo-link\"\n                href=\"https://github.com/brianHollingsworth/brian.hollingsworth.codes\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">Node.js</a> application on the free tier of OpenShift, it has\n                been refactored into React and placed on GitHub Pages.</p>\n            </span>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser'\nimport './css/Job.css';\n\nconst Job = props => {\n    return (\n        <div className=\"job\">\n            <div className=\"job-header\">\n                <h4 className=\"job-title\">{props.title}</h4>\n                <h5 className=\"job-company\">{props.company}</h5>\n                <h5 className=\"job-tenure\">{props.tenure}</h5>\n            </div>\n            <div className=\"job-body\">\n                <p>\n                { ReactHtmlParser(props.description) }\n                </p>\n            </div>\n            <hr className=\"job-divider\"></hr>\n        </div>\n    );\n};\n\nexport default Job;","import React, { Component } from 'react'\nimport Job from './Job';\nimport JobsData from './js/Jobs.json'\n\nclass JobList extends Component {\n    render () {\n        return (\n            <div>\n                {JobsData.map((jobDetail)=>{\n                    return <Job key={jobDetail.key} title={jobDetail.Title} company={jobDetail.Company} tenure={jobDetail.Tenure} description={jobDetail.Description}/>\n                })}\n            </div>\n        )\n    }\n}\n\nexport default JobList","import React from 'react';\nimport JobList from './JobList'\n\nexport default function WorkExperience(props) {\n    return (\n        <div id=\"work-experience\">\n            <h1>Work Experience</h1>\n            <JobList/>\n            <div className=\"spacer\"></div>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SkillProficiency = props => {\n\n    const stars = []\n\n    for (var i = 0; i < props.proficiency; i++) {\n        stars.push(<FontAwesomeIcon icon={faStar} size='xs'/>)\n    }\n\n    return (\n        <div>\n            {stars}\n        </div>\n    )\n}\n\nexport default SkillProficiency;","import React, { Component } from 'react'\nimport Languages from './js/Languages.json'\nimport Tools from './js/Tools.json'\nimport Environments from './js/Environments.json'\nimport SkillProficiency from './SkillProficiency'\nimport './css/Skillset.css'\n\nclass SkillGrid extends Component {\n    render () {\n        return (\n            <div>\n                <div className='flex-container'>\n                        {Languages.map((language)=>{\n                        return <div className=\"skill-container\">\n                                <img className=\"skill-image\" alt={language.Name} src={language.Icon}/>\n                                <div className=\"skill-overlay\">\n                                    <div class=\"text\">{language.Name}</div>\n                                    <SkillProficiency proficiency={language.Proficiency}/>\n                                </div>\n                            </div>\n                        })}\n                        <div className=\"hr-container\">\n                            <hr className=\"skillset-divider\"></hr>\n                        </div>\n                        {Tools.map((tool)=>{\n                        return <div className=\"skill-container\">\n                                <img className=\"skill-image\" alt={tool.Name} src={tool.Icon}/>\n                                <div className=\"skill-overlay\">\n                                    <div class=\"text\">{tool.Name}</div>\n                                    <SkillProficiency proficiency={tool.Proficiency}/>\n                                </div>\n                            </div>\n                        })}\n                        <div className=\"hr-container\">\n                            <hr className=\"skillset-divider\"></hr>\n                        </div>\n                        {Environments.map((environment)=>{\n                        return <div className=\"skill-container\">\n                                <img className=\"skill-image\" alt={environment.Name} src={environment.Icon}/>\n                                <div className=\"skill-overlay\">\n                                    <div class=\"text\">{environment.Name}</div>\n                                    <SkillProficiency proficiency={environment.Proficiency}/>\n                                </div>\n                            </div>\n                        })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SkillGrid","import React from 'react';\nimport SkillGrid from './SkillGrid'\n\nexport default function Skillset(props) {\n    return (\n        <div id=\"skillset\">\n            <h1>Skillset</h1>\n            <p>Loosely following the <a href=\"http://www.bumc.bu.edu/facdev-medicine/files/2012/03/Dreyfus-skill-level.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i>Dreyfus model of skill acquisition</i></a>, I've laid out what I believe to be my top skills into three categories: languages, tools, and operating systems.</p>\n            <SkillGrid/>\n        </div>\n    );\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function ResumeSection(props) {\n    return (\n        <li>\n            <NavLink to={props.route} exact style={{color: '#6e7179', textDecoration: 'none'}} activeStyle={{color: 'white', textDecoration: 'none', borderLeft: 'solid white 0.15em', paddingLeft: '0.85em'}}><FontAwesomeIcon icon={props.icon} /></NavLink>\n        </li>\n    );\n}","import React from \"react\";\nimport BHLogo from './BHLogo';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport WorkExperience from \"./WorkExperience\";\nimport Skillset from \"./Skillset\";\nimport ResumeSection from './ResumeSection';\n\nimport { faTwitter, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUserCircle, faBriefcase, faCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>Profile</div>,\n    main: () => <Profile/>\n  },\n  {\n    path: \"/work-experience\",\n    sidebar: () => <div>Work Experience</div>,\n    main: () => <WorkExperience/>\n  },\n  {\n    path: \"/skillset\",\n    sidebar: () => <div>Skillset</div>,\n    main: () => <Skillset/>\n  }\n];\n\nexport default function ResumeRouter(props) {\n  return (\n    <Router>\n      <div style={{ display: \"flex\", width: \"100%\" }}>\n        <div id=\"router-sidebar\" style={{ width: \"3.1em\", backgroundColor: \"#282C34\" }}>\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            <li id=\"logo-li\">\n              <BHLogo className=\"App-logo\" />\n            </li>\n              <ResumeSection route=\"/\" icon={faUserCircle}/>\n              <ResumeSection route=\"/work-experience\" icon={faBriefcase}/>\n              <ResumeSection route=\"/skillset\" icon={faCode}/>\n            <li>\n              <a id=\"twitter\" href=\"https://twitter.com/Kobe_Brian\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} /></a>\n            </li>\n            <li>\n              <a id=\"github\" href=\"https://github.com/brianHollingsworth\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\n            </li>\n          </ul>\n        </div>\n\n        <div id=\"router-switch\" style={{ flex: 1, paddingRight: \"1em\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              // Render more <Route>s with the same paths as\n              // above, but different components this time.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}","import React from 'react';\nimport ResumeRouter from './ResumeRouter';\nimport './App.css';\nimport './index.css';\nimport './signature-animate.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ResumeRouter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}